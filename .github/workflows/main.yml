name: Build Shadow AI GUI - Windows

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]
  workflow_dispatch:  # Allow manual triggering

env:
  PROJECT_NAME: "ShadowAI"
  PYTHON_VERSION: "3.12.5"

jobs:
  build-gui:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Display Python version
      run: |
        python --version
        pip --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
        # Install build dependencies
        pip install pyinstaller
        
        # Install GUI-specific dependencies
        pip install customtkinter
        pip install pygame
        pip install psutil

    - name: Test GUI imports
      run: |
        python -c "
        try:
            import customtkinter
            import openai
            import pygame
            import psutil
            import requests
            import asyncio
            import threading
            print('‚úÖ All GUI dependencies imported successfully')
            
            # Test project modules
            import sys
            sys.path.append('.')
            from shadow_core.gui import ShadowGUI
            from shadow_core.brain import ShadowBrain
            print('‚úÖ Project GUI modules imported successfully')
            
        except ImportError as e:
            print(f'‚ùå Import error: {e}')
            exit(1)
        except Exception as e:
            print(f'‚ö†Ô∏è  Warning: {e}')
        "

    - name: Test GUI application
      run: |
        # Test that the GUI application can start without errors
        python -c "
        import sys
        sys.path.append('.')
        try:
            # Test basic initialization without running main loop
            from shadow_core.gui import ShadowGUI
            print('‚úÖ GUI class can be imported')
            
            # Test the main GUI launcher
            import run_shadow_gui
            print('‚úÖ GUI launcher module works')
            
        except Exception as e:
            print(f'‚ùå GUI test failed: {e}')
            exit(1)
        "

    - name: Build GUI application with PyInstaller
      run: |
        python -m PyInstaller `
          --clean `
          --noconfirm `
          --onefile `
          --windowed `
          --name=${{ env.PROJECT_NAME }} `
          --add-data="shadow_core;shadow_core" `
          --add-data="config.example.py;." `
          --hidden-import=customtkinter `
          --hidden-import=openai `
          --hidden-import=pygame `
          --hidden-import=psutil `
          --hidden-import=requests `
          --hidden-import=asyncio `
          --hidden-import=threading `
          --hidden-import=concurrent.futures `
          --hidden-import=queue `
          run_shadow_gui.py

    - name: Create distribution package
      run: |
        # Create distribution folder
        $version = "1.0.0"
        $distFolder = "${{ env.PROJECT_NAME }}-GUI-v$version"
        New-Item -ItemType Directory -Path $distFolder -Force
        
        # Copy the single executable
        Copy-Item "dist/${{ env.PROJECT_NAME }}.exe" "$distFolder/${{ env.PROJECT_NAME }}.exe" -Force
        
        # Copy configuration files
        Copy-Item "config.example.py" "$distFolder/config.py" -Force
        Copy-Item "README.md" "$distFolder/" -Force
        Copy-Item "LICENSE" "$distFolder/" -Force
        
        # Create comprehensive README
        @"
# üéØ Shadow AI - GUI Application

**Version**: $version  
**Python**: ${{ env.PYTHON_VERSION }}  
**Build Date**: $(Get-Date -Format "yyyy-MM-dd HH:mm")

## üöÄ Quick Start

1. **Download** this package
2. **Configure** your API keys in `config.py`:
   ```python
   OPENAI_API_KEY = "your-openai-api-key-here"
   OPENWEATHER_API_KEY = "your-weather-key-here"  # Optional
