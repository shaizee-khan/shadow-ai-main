name: Build Shadow AI - Windows

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_dist.txt
        pip install pyinstaller
    - name: Build main application
      run: |
        python -m PyInstaller --clean --noconfirm --windowed --name=ShadowAI run_shadow_gui.py
    - name: Build installer
      run: |
        python -m PyInstaller --clean --noconfirm --onefile --windowed --name=ShadowAI_Setup graphical_installer.py
    - name: Create Windows package
      run: |
        mkdir ShadowAI-Windows-${{ matrix.python-version }}
        cp -r dist/ShadowAI/* ShadowAI-Windows-${{ matrix.python-version }}/
        cp dist/ShadowAI_Setup.exe ShadowAI-Windows-${{ matrix.python-version }}/
        
        # Create README
        echo "Shadow AI - Windows Build (Python ${{ matrix.python-version }})" > ShadowAI-Windows-${{ matrix.python-version }}/README.txt
        echo "" >> ShadowAI-Windows-${{ matrix.python-version }}/README.txt
        echo "Run ShadowAI_Setup.exe for installation" >> ShadowAI-Windows-${{ matrix.python-version }}/README.txt
        echo "Or run ShadowAI.exe for portable version" >> ShadowAI-Windows-${{ matrix.python-version }}/README.txt
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ShadowAI-Windows-${{ matrix.python-version }}
        path: ShadowAI-Windows-${{ matrix.python-version }}
        retention-days: 30

  create-release:
    needs: build-windows
    runs-on: windows-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release Bundle
      run: |
        mkdir release-package
        # Copy the best Python version (3.10 recommended)
        cp -r ShadowAI-Windows-3.10/* release-package/
        
        # Create comprehensive README
        cat > release-package/README.txt << EOF
        Shadow AI - Windows Release
        
        🚀 Features:
        - Multilingual support (Urdu, Pashto, English)
        - Voice recognition and synthesis
        - Computer automation
        - File management
        - Web search integration
        
        📥 Installation:
        1. Run ShadowAI_Setup.exe as Administrator
        2. Follow the installation wizard
        3. Launch from Start Menu or Desktop
        
        🔧 Portable Version:
        - Run ShadowAI.exe directly (no installation required)
        
        ⚠️ Requirements:
        - Windows 10/11 (64-bit)
        - 4GB RAM minimum
        - 500MB free space
        - Microphone for voice features
        
        🆘 Support:
        Create an issue at: ${{ github.repository }}/issues
        EOF
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./release-package
        asset_name: ShadowAI-Windows.zip
        asset_content_type: application/zip
